@startuml C4_Container_Diagram

skinparam defaultTextAlignment center

set separator none

title Bank Standart Context Diagram - Containers

top to bottom direction

!$ICONURL = "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons"
!include $ICONURL/common.puml
!include $ICONURL/devicons/dotnet.puml
!include $ICONURL/devicons2/csharp.puml

!include $ICONURL/devicons/postgresql.puml
!include $ICONURL/font-awesome/server.puml
!include $ICONURL/font-awesome-5/database.puml

!include <C4/C4_Container>

Boundary(boundaryPerson, "<person>") {
    Person(Users.NewClient, "Новый клиент", "Подает заявку через сайт")
    Person(Users.OldClient, "Существующий клиент", "Открывает депозит онлайн")
}

Boundary(boundaryStuff, "<stuff>") {
    Person(Users.Admin, "Администратор бэк-офиса", "Открывает депозит онлайн")
}

Enterprise_Boundary("BankStandart_Boundary", "Bank Standart") {
    Container(BankStandart.MobileApplication, "Mobile Application", $techn="Android, IOS", $descr="Мобильное приложение")
    Container(BankStandart.WebApplication, "Web Application", $techn="JS, React, Node.js", $descr="WEB приложение")
    Container(BankStandart.AdminApplication, "Web Application", $techn="JS, React, Node.js", $descr="WEB приложение")

    System_Boundary("BankStandartSystem_boundary", "Bank Standart System") {
        Container(BankStandartSystem.ApiGateWay, "API gateway", $techn="dotnet, csharp", $descr="Единая точка входа для приложения", $sprite="dotnet")   

        
        Container(BankStandartSystem.AdminService, "Admin service", $techn="dotnet, csharp", $descr="Сервис Администрирования и управления", $sprite="dotnet")       
        DEV_POSTGRESQL(BankStandartSystem.AdminService.Database, "БД Администрирования и управления", database, #White) #RoyalBlue

        Container(BankStandartSystem.UserService, "User Service", $techn="dotnet, csharp", $descr="Сервис пользователей системы", $sprite="dotnet")  
        DEV_POSTGRESQL(BankStandartSystem.UserService.Database, "БД пользователей системы", database, #White) #RoyalBlue

        Container(BankStandartSystem.DepositService, "Deposit Service", $techn="dotnet, csharp", $descr="Сервис депозитов", $sprite="dotnet")  
        DEV_POSTGRESQL(BankStandartSystem.DepositService.Database, "БД депозитов", database, #White) #RoyalBlue

        Container(BankStandartSystem.BidService, "Bid service", $techn="dotnet, csharp", $descr="Сервис заявок", $sprite="dotnet")
        DEV_POSTGRESQL(BankStandartSystem.BidService.Database, "БД заявок", database, #White) #RoyalBlue
        
        Container(BankStandartSystem.ABS, "АБС", "dotnet, csharp", "Финансовые операции, договоры")
        
        Container(BankStandartSystem.CreditService, "Credit Service", $techn="dotnet, csharp", $descr="Сервис Кредитования", $sprite="dotnet")       
        DEV_POSTGRESQL(BankStandartSystem.CreditService.Database, "БД Кредитования", database, #White) #RoyalBlue

        Container(BankStandartSystem.PreapprovalService, "Preapproval Service", $techn="dotnet, csharp", $descr="Сервис Предодобрения", $sprite="dotnet")       
        DEV_POSTGRESQL(BankStandartSystem.PreapprovalService.Database, "БД Предодобрения", database, #White) #RoyalBlue

        System_Ext(BankStandartSystem.ExtSystem.KeyCloak, "KeyCloak", $descr="Система авторизации и аутонтификации пользователей")
        SystemQueue_Ext(BankStandartSystem.ExtSystem.Kafka, "Kafka", $descr="Брокер сообщений")
        Container(BankStandartSystem.SFTP, "SFTP-сервер", "Хранение файлов",  $techn="Linux, OpenSSH")
    }
} 

Boundary(boundaryCallCenter, "<Call Center>") {
    System_Ext(CallCenter, "Кол-центр (Обработка звонков)", "")
    System_Ext(PartnerCallCenter, "Партнёрский кол-центр", "Внешняя система")
}

Boundary(boundarySms, "<Sms system>") {
    System_Ext(SmsGateway, "SMS-шлюз", "Интеграция с API оператора", "Отправка уведомлений")
}

Rel(Users.NewClient, BankStandart.WebApplication, "Клиент выбирает депозит")
Rel(BankStandart.WebApplication, BankStandartSystem.ApiGateWay, "REST-запрос", $techn="HTTPS/JSON")

Rel(Users.OldClient, BankStandart.MobileApplication, "Клиент выбирает депозит")
Rel(Users.OldClient, BankStandart.WebApplication, "Клиент выбирает депозит")
Rel(Users.Admin, BankStandart.AdminApplication, "Администрирование")
Rel(BankStandart.AdminApplication, BankStandartSystem.ApiGateWay, "REST-запрос", $techn="HTTPS/JSON")

Rel(CallCenter, Users.NewClient, "Звонок для уточнения")

Rel(BankStandartSystem.UserService, BankStandartSystem.UserService.Database, "", $techn="SQL")
Rel(BankStandartSystem.BidService, BankStandartSystem.BidService.Database, "", $techn="SQL")
Rel(BankStandartSystem.DepositService, BankStandartSystem.DepositService.Database, "", $techn="SQL")
Rel(BankStandartSystem.AdminService, BankStandartSystem.AdminService.Database, "", $techn="SQL")
Rel(BankStandartSystem.ApiGateWay, BankStandartSystem.UserService, "REST-запрос", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ApiGateWay, BankStandartSystem.DepositService, "REST-запрос", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ApiGateWay, BankStandartSystem.BidService, "REST-запрос", $techn="HTTPS/JSON")
Rel(BankStandartSystem.BidService, CallCenter, "Отправляет информацию о заявке", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ApiGateWay, BankStandartSystem.AdminService, "REST-запрос", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ApiGateWay, BankStandartSystem.CreditService, "REST-запрос", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ApiGateWay, BankStandartSystem.PreapprovalService, "REST-запрос", $techn="HTTPS/JSON")

Rel(BankStandartSystem.CreditService, BankStandartSystem.CreditService.Database, "", $techn="SQL")
Rel(BankStandartSystem.PreapprovalService, BankStandartSystem.PreapprovalService.Database, "", $techn="SQL")
Rel(BankStandartSystem.PreapprovalService, SmsGateway, "", $techn="HTTPS/JSON, SMTP")
Rel(BankStandartSystem.CreditService, SmsGateway, "", $techn="HTTPS/JSON, SMTP")

Rel(BankStandartSystem.DepositService, BankStandartSystem.ExtSystem.Kafka, "Очередь", $techn="queue")
Rel(BankStandartSystem.ExtSystem.Kafka, BankStandartSystem.ABS, "Очередь", $techn="queue")
Rel(BankStandartSystem.ABS, SmsGateway, "Отправка кода подтверждения", $techn="HTTPS/JSON, SMTP")

Rel(BankStandartSystem.ExtSystem.KeyCloak, BankStandartSystem.UserService, "Проверка JWT-токена", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ExtSystem.KeyCloak, BankStandartSystem.ApiGateWay, "Проверка JWT-токена", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ExtSystem.KeyCloak, BankStandart.MobileApplication, "Проверка JWT-токена", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ExtSystem.KeyCloak, BankStandart.WebApplication, "Проверка JWT-токена", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ExtSystem.KeyCloak, BankStandart.AdminApplication, "Проверка JWT-токена", $techn="HTTPS/JSON")
Rel(BankStandartSystem.ExtSystem.KeyCloak, BankStandartSystem.AdminService, "Проверка JWT-токена", $techn="HTTPS/JSON")

Rel(BankStandart.MobileApplication, BankStandartSystem.ApiGateWay, "REST-запрос", $techn="HTTPS/JSON")
Rel(CallCenter, BankStandartSystem.ApiGateWay, "Ввод данных в АБС", $techn="SOAP")

Rel(BankStandartSystem.ABS, BankStandartSystem.SFTP, "Выгружает csv с интервалом 30 мин")
Rel(BankStandartSystem.SFTP, PartnerCallCenter, "Загрузка файлов с интервалом 1 час")
Rel(BankStandartSystem.SFTP, CallCenter, "Загрузка файлов с интервалом 1 час")

@enduml
